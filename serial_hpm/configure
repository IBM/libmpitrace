#!/bin/bash 
#parse command arguments
config_args=$(/usr/bin/getopt -n $0 -l "help,with-hpm:,with-papi:" -o "hc:p:" -- "$@")
eval set -- "$config_args"

help_flag=0
hpm_flag=0
papi_flag=0

arch=`uname -i`

while true 
do
  case "$1" in
    -h|--help)
     echo "configure options :"
     echo "--help  (prints this help message)"
     echo "--with-hpm=[core|uncore]  (required and must also specify --with-papi=/path/to/papi)"
     echo "--with-papi=/path/to/papi (required and must have sub-directories : lib,include)"
     exit;;
  
    -c|--with-hpm)
     hpm_flag=1
     counter_type="$2"
     if [ ${counter_type:0:2} == -- ]; then
       echo error : specify --with-hpm=core  or  --with-hpm=uncore ... exiting
       exit
     fi
     shift 2;;

    -p|--with-papi)
     papi_flag=1
     papi_path="$2"
     if [ ${papi_path:0:2} == -- ]; then
       echo error : specify --with-papi=/path/to/papi ... exiting
       exit
     fi
     echo using papi_path=$papi_path
     shift 2;;

    --)
     shift
     break;;
  esac
done

if [ $hpm_flag == 0 ]; then
  echo "use syntax : ./configure --with-hpm=[core|uncore] --with-papi=/path/to/papi"
  exit
fi

if [ $papi_flag == 0 ]; then
  echo "use syntax : ./configure --with-hpm=[core|uncore] --with-papi=/path/to/papi"
  exit
fi

cp makefile.in makefile

if [ $papi_flag == 1 ]; then
  if [ $hpm_flag == 0 ]; then
    echo enabling hpm core support because option --with-papi=/path/to/papi  was set
    echo ""
    hpm_flag=1
    counter_type=core
  fi
fi

if [ $hpm_flag == 1 ]; then
# check for papi components
  if [[ ! -z $papi_path ]]; then
    echo -n testing for libpapi.a...
    if [ -f $papi_path/lib/libpapi.a ]; then
      echo found
    else
      echo libpapi.a not found ... check your papi path ... exiting
      exit
    fi

    echo -n testing for papi.h...
    if [ -f $papi_path/include/papi.h ]; then
      echo found
    else
      echo papi.h not found ... check your papi path ... exiting
      exit
    fi

    x_papi_path="$(echo $papi_path | sed 's/\//\\\//g')"

    sed -i "s/PAPI_INSTALL_PATH/$x_papi_path/g" makefile

  else

    echo "error  : the configure option --with-papi  is required for hpm support"
    echo "example : ./configure --with-hpm=core --with-papi=/path/to/papi"
    exit

  fi

# attempt to set counters.h to an appropriate file based on architecture
  case "$arch" in
    x86_64)
     if [ $counter_type != uncore ]; then
       ln -sf ../counters/skylake_core.h counters.h
       echo ""
       echo "setting link : ln -sf ../counters/skylake_core.h counters.h"
     else 
       ln -sf ../counters/skylake_uncore.h counters.h
       sed -i "s/#UNCORE = -DUNCORE_COUNTERS/ UNCORE = -DUNCORE_COUNTERS/g" makefile
       echo ""
       echo "setting link : ln -sf ../counters/skylake_uncore.h counters.h"
     fi
     ;;

    ppc64le)
     echo ""
     if [ $counter_type != core ]; then
       echo "for arch = ppc64le, only core counters are currently supported"
     fi
     ln -sf ../counters/power9_core.h counters.h
     echo "setting link : ln -sf ../counters/power9_core.h counters.h"
     ;;

    aarch64)
     echo ""
     if [ $counter_type != core ]; then
       echo "for arch = aarch64, only core counters are currently supported"
     fi
     ln -sf ../counters/thunderx2_core.h counters.h
     echo "setting link : ln -sf ../counters/thunderx2_core.h counters.h"
     ;;
  esac


  echo ""
  echo "Edit \"makefile\" and ensure that the path for papi is set correctly"
  echo "To build the libhpm.so library, check the link for counters.h then type : make libhpm.so"
  echo ""
fi

